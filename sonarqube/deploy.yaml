apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-data
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-extensions
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: sonarqube
          image: sonarqube:8.9.1-community
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          volumeMounts:
          - mountPath: "/opt/sonarqube/data/"
            name: sonar-data
          - mountPath: "/opt/sonarqube/extensions/"
            name: sonar-extensions
          env:
          - name: "SONARQUBE_JDBC_USERNAME"
            value: ${{ env.POSTGRESQL_USERNAME}}
          - name: "SONARQUBE_JDBC_URL"
            value: ${{ env.POSTGRESQL_JBDCURL}}
          - name: "SONARQUBE_JDBC_PASSWORD"
            value: ${{ env.POSTGRESQL_PASSWORD}}
          ports:
          - containerPort: 9000
            protocol: TCP
      volumes:
      - name: sonar-data
        persistentVolumeClaim:
          claimName: sonar-data
      - name: sonar-extensions
        persistentVolumeClaim:
          claimName: sonar-extensions
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
spec:
  domains:
    - sonarqube.d-e-l-o.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonaringress
  namespace: sonarqube
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "sq-address"
    networking.gke.io/managed-certificates: managed-cert
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  defaultBackend:
    service:
      name: mc-service
      port:
        number: 9000
#spec:
#  rules:
#  - host: sonarqube.d-e-l-o.com
#    http:
#      paths:
#      - path: /
#        backend:
#          serviceName: sonar
#          servicePort: 9000